#include <Wire.h>
#include <string.h>
#include <stdio.h>

#include "ssd1306.h"

#include <SPI.h>

#include "SdFat.h"

typedef unsigned char byte;

const unsigned char o[] PROGMEM = {
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0x1F,
  0x1F,
  0x1F,
  0x1F,
  0x1F,
  0x7F,
  0x7F,
  0x7F,
  0x3F,
  0x3F,
  0x3F,
  0x3F,
  0x3F,
  0x1F,
  0x1F,
  0x1F,
  0x3F,
  0x3F,
  0x3F,
  0x7F,
  0x7F,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0x3F,
  0x0F,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x01,
  0x07,
  0x1F,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xC3,
  0x2B,
  0x2B,
  0x63,
  0xE3,
  0xE3,
  0xE7,
  0x07,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x80,
  0x80,
  0x80,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x20,
  0x00,
  0x00,
  0x00,
  0x03,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0x7F,
  0x7F,
  0x7F,
  0x7F,
  0x7F,
  0x7F,
  0x7F,
  0x7F,
  0x7F,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0x9F,
  0xC1,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x10,
  0x80,
  0xCC,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFC,
  0xFF,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x80,
  0xE0,
  0xFB,
  0xFB,
  0xE3,
  0xCF,
  0xCF,
  0x87,
  0x77,
  0x77,
  0x77,
  0x77,
  0x77,
  0x77,
  0x77,
  0x77,
  0x77,
  0x77,
  0x77,
  0x0F,
  0xDF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xEF,
  0xEF,
  0xEF,
  0xEF,
  0xEF,
  0xEF,
  0x6F,
  0xCF,
  0xCF,
  0x9F,
  0x3F,
  0x7F,
  0x3F,
  0x01,
  0xFF,
  0xFF,
  0xFF,
  0xF9,
  0xF9,
  0xFF,
  0xFF,
  0xF3,
  0xFB,
  0xFF,
  0x7F,
  0x80,
  0x9F,
  0x9F,
  0x9F,
  0x9B,
  0x9B,
  0x9B,
  0xB8,
  0xB9,
  0xCB,
  0xCB,
  0xC7,
  0xC7,
  0xC7,
  0xE7,
  0xF8,
  0xF8,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0xD8,
  0xFD,
  0xFD,
  0xFD,
  0xFD,
  0xFD,
  0xFD,
  0xFD,
  0xF1,
  0xE1,
  0xC1,
  0x9C,
  0xA0,
  0x40,
  0xF0,
  0x0C,
  0x00,
  0x00,
  0x00,
  0x00,
  0x1E,
  0xFF,
  0xFF,
  0x7F,
  0x7F,
  0xBF,
  0xDF,
  0x9F,
  0x39,
  0x14,
  0xEE,
  0xFE,
  0xFC,
  0xFC,
  0xFD,
  0xFD,
  0xFD,
  0xFC,
  0xFC,
  0xFC,
  0xFC,
  0xF0,
  0xFD,
  0xDD,
  0x85,
  0x9B,
  0x5F,
  0x7F,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF2,
  0xF2,
  0xF1,
  0xF0,
  0xF2,
  0xF2,
  0xF2,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF2,
  0xF0,
  0xF3,
  0xF3,
  0x03,
  0xF3,
  0xFB,
  0xFA,
  0xFA,
  0xFA,
  0xF8,
  0xFA,
  0xFA,
  0xFA,
  0xFB,
  0xFB,
  0xFB,
  0xF8,
  0x00,
  0x00,
  0x00,
  0x30,
  0xF1,
  0xF1,
  0xF5,
  0xE6,
  0xEE,
  0xFD,
  0xFB,
  0xF7,
  0xF7,
  0xFF,
  0xEF,
  0xEF,
  0xEF,
  0x0E,
  0x20,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0xFD,
  0xFE,
  0xFE,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0x1E,
  0xC0,
  0x02,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0xF1,
  0xF3,
  0xF3,
  0xF3,
  0xF3,
  0x03,
  0xF5,
  0xF5,
  0xF4,
  0xF4,
  0xF4,
  0xF5,
  0xF5,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0x00,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0x1F,
  0x00,
  0x00,
  0x00,
  0x00,
  0x07,
  0x9F,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xF1,
  0xF8,
  0xFB,
  0xFF,
  0x00,
  0x7F,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0x00,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xF8,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xF8,
  0xF8,
  0xF8,
  0xF8,
  0xF8,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xF8,
  0xF8,
  0xF8,
  0xF8,
  0xF8,
  0xF8,
  0xF8,
  0xF8,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFE,
  0xFC,
  0xF8,
  0xFB,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xF8,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
  0xFF,
};

static SdFat32 sd;
static File32  bp;

static int tick = 0;

static byte buf[6048] = {};

void setup() {
  Serial.begin(9600);

  while(!Serial);

  pinMode(53, OUTPUT);

  memset(buf, 0, 6048);

  if (!sd.begin(SdSpiConfig(53, DEDICATED_SPI, SD_SCK_MHZ(50)))) {
    Serial.println("SD Card Init... Failed");
    while (1);
  }

  ssd1306_128x64_i2c_init();

  ssd1306_clearScreen();
  ssd1306_fillScreen(0);

  bp.open("eup.bin");
}

void loop() {
  if (Serial.available()) {
    Serial.read();

    if (tick >= 3777) {
      bp.close();
      sd.end();
      return;
    }
    
    if(tick % 9 == 0){
      bp.read(buf, 6048);
    }

    ssd1306_drawBufferFast(16, 1, 96, 56, buf + ((tick % 9) * 672));

    tick++;
  }
}
